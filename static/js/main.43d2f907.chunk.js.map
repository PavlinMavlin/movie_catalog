{"version":3,"sources":["components/main/Main.module.css","components/movies/Movie.module.css","components/header/Header.module.css","components/input/SearchInput.module.css","components/movies/MoviesList.module.css","redux/reducer/movie-reducer.ts","components/input/SearchInput.tsx","api/api.ts","components/header/Header.tsx","components/movies/Movie.tsx","components/movies/MoviesList.tsx","components/main/Main.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["module","exports","CONTACTS_ACTIONS_TYPES","SearchInput","props","useState","searchTitleValue","setSearchTitleValue","value","onChange","e","currentTarget","onKeyPress","charCode","onKeyPressEnter","trim","className","style","search","instance","axios","create","baseURL","movieAPI","title","page","get","initialState","Search","totalResults","status","setRequestStatusAC","type","SET_REQUEST_STATUS","Header","React","memo","dispatch","useDispatch","setSearchValue","useCallback","newSearchTitle","SET_SEARCH_TITLE","headerContainer","Movie","movieBlock","alt","img","src","movieContainer","name","split","year","imdbID","MoviesList","moviesBlock","movie","map","mv","Title","Year","Type","Poster","Main","useSelector","state","movieReducer","pagesCount","Math","ceil","useEffect","a","res","movieState","data","SET_MOVIE","console","log","fetchMovieTC","position","top","left","textAlign","width","CircularProgress","size","mainBlock","length","mainContainer","pagination","Pagination","count","event","SET_NEW_CURRENT_PAGE","setNewCurrentPageAC","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43d2f907.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Main_mainBlock__1d0gZ\",\"search\":\"Main_search__28G0A\",\"mainContainer\":\"Main_mainContainer__Xy6Py\",\"pagination\":\"Main_pagination__wN_DG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieBlock\":\"Movie_movieBlock__3gQZR\",\"img\":\"Movie_img__3Rh8_\",\"movieContainer\":\"Movie_movieContainer__Z2l-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__3QumF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchInput_search__2sa7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesBlock\":\"MoviesList_moviesBlock__gCi0w\",\"empty\":\"MoviesList_empty__2pEp1\"};","import {AppActionsType, AppRootStateType} from \"../store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {movieAPI, MovieSearchType, SearchType} from \"../../api/api\";\r\n\r\n\r\nenum CONTACTS_ACTIONS_TYPES {\r\n    SET_MOVIE = \"SET_MOVIE\",\r\n    SET_SEARCH_TITLE = \"SET_SEARCH_TITLE\",\r\n    SET_NEW_CURRENT_PAGE = \"SET_NEW_CURRENT_PAGE\",\r\n    SET_REQUEST_STATUS = \"SET_REQUEST_STATUS\",\r\n\r\n}\r\n\r\n\r\nconst initialState = {\r\n    Search: [] as SearchType[],\r\n    totalResults: \"\",\r\n    title: \"\",\r\n    page: 1,\r\n    status: \"idle\" as RequestStatusType,\r\n}\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const movieReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case CONTACTS_ACTIONS_TYPES.SET_MOVIE:\r\n            return {...state, ...action.movieState}\r\n        case CONTACTS_ACTIONS_TYPES.SET_SEARCH_TITLE:\r\n            return {...state, title: action.title}\r\n        case CONTACTS_ACTIONS_TYPES.SET_NEW_CURRENT_PAGE:\r\n            return {...state, page: action.page}\r\n        case CONTACTS_ACTIONS_TYPES.SET_REQUEST_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// actions\r\nexport const setMovieAC = (movieState: MovieSearchType) => (\r\n    {type: CONTACTS_ACTIONS_TYPES.SET_MOVIE, movieState} as const)\r\n\r\nexport const setSearchTitleAC = (title: string) => (\r\n    {type: CONTACTS_ACTIONS_TYPES.SET_SEARCH_TITLE, title} as const)\r\n\r\nexport const setNewCurrentPageAC = (page: number) => (\r\n    {type: CONTACTS_ACTIONS_TYPES.SET_NEW_CURRENT_PAGE, page} as const)\r\n\r\nexport const setRequestStatusAC = (status: RequestStatusType) => {\r\n    return {type: CONTACTS_ACTIONS_TYPES.SET_REQUEST_STATUS, status} as const\r\n}\r\n\r\n//thunk\r\nexport const fetchMovieTC = (title: string, page: number): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setRequestStatusAC(\"loading\"))\r\n            const res = await movieAPI.getMovie(title, page)\r\n            dispatch(setRequestStatusAC(\"succeeded\"))\r\n            dispatch(setMovieAC(res.data))\r\n\r\n\r\n        } catch (error) {\r\n            dispatch(setRequestStatusAC(\"failed\"))\r\n            console.log(error)\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n\r\n//types\r\n\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\nexport type MovieReducersActionTypes = ReturnType<typeof setMovieAC>\r\n    | ReturnType<typeof setSearchTitleAC>\r\n    | ReturnType<typeof setNewCurrentPageAC>\r\n    | ReturnType<typeof setRequestStatusAC>\r\n\r\n\r\n","import {ChangeEvent, useCallback, useState, KeyboardEvent} from \"react\";\r\nimport style from \"../input/SearchInput.module.css\"\r\n\r\ntype SearchInputPropsType = {\r\n    onKeyPressEnter: (value: string) => void\r\n}\r\n\r\nexport const SearchInput = (props: SearchInputPropsType) => {\r\n\r\n    const [searchTitleValue, setSearchTitleValue] = useState<string>(\"\")\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchTitleValue(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            props.onKeyPressEnter(searchTitleValue.trim())\r\n            setSearchTitleValue(\"\")\r\n        }\r\n    }\r\n    return (<div>\r\n        <input value={searchTitleValue} onChange={onChangeHandler} onKeyPress={onKeyPressHandler}\r\n               className={style.search}\r\n        />\r\n    </div>)\r\n}","import axios from \"axios\"\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://www.omdbapi.com/\",\r\n})\r\n//API\r\nexport const movieAPI = {\r\n    getMovie(title: string, page: number) {\r\n        return instance.get<MovieSearchType>(`?i=tt3896198&apikey=8523cbb8 &s=${title}&page=${page}`)\r\n    },\r\n\r\n}\r\n\r\n//types\r\nexport  type GetMovieResponseType = {\r\n    Title: string,\r\n    Year: string,\r\n    Rated: string,\r\n    Released: string,\r\n    Runtime: string,\r\n    Genre: string,\r\n    Director: string,\r\n    Writer: string,\r\n    Actors: string,\r\n    Plot: string,\r\n    Language: string,\r\n    Country: string,\r\n    Awards: string,\r\n    Poster: string,\r\n    Ratings: Array<RatingsType>,\r\n    Metascore: string,\r\n    imdbRating: string,\r\n    imdbVotes: string,\r\n    imdbID: string,\r\n    Type: string,\r\n    DVD: string,\r\n    BoxOffice: string,\r\n    Production: string,\r\n    Website: string,\r\n    Response: string\r\n}\r\n\r\ntype RatingsType = { Source: string, Value: string }\r\n\r\nexport type MovieSearchType = {\r\n    Search: SearchType[],\r\n    totalResults: string,\r\n    \"Response\": string\r\n}\r\n\r\nexport type SearchType = {\r\n    Title: string,\r\n    Year: string,\r\n    imdbID: string,\r\n    Type: string,\r\n    Poster: string,\r\n}","import style from \"../header/Header.module.css\"\r\nimport {SearchInput} from \"../input/SearchInput\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport React, {useCallback} from \"react\";\r\nimport {setSearchTitleAC} from \"../../redux/reducer/movie-reducer\";\r\n\r\nexport const Header = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n    const setSearchValue = useCallback((newSearchTitle: string) => {\r\n        dispatch(setSearchTitleAC(newSearchTitle))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={style.headerContainer}>\r\n            <div>\r\n                <h1> Movie catalog </h1>\r\n            </div>\r\n            <div>\r\n                <SearchInput onKeyPressEnter={setSearchValue}/>\r\n            </div>\r\n            <div>\r\n                <select >\r\n                    <option >Nikolay Borisenko</option>\r\n                    <option >Nikolay Borisenko</option>\r\n                    <option >Cherry</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import style from \".//Movie.module.css\"\r\n\r\ntype MoviePropsType = {\r\n    name: string\r\n    year: string\r\n    imdbID: string\r\n    type: string\r\n    img: string\r\n}\r\n\r\nexport function Movie(props: MoviePropsType) {\r\n    return (\r\n        <div className={style.movieBlock}>\r\n            <div><img alt=\"\" className={style.img} src={props.img ? props.img : \"\"}/></div>\r\n            <div className={style.movieContainer}>\r\n                <div><p> Name:{props.name.split(':')[0]}</p></div>\r\n                <div><p>Year:{props.year}</p></div>\r\n                <div><p>imdbID:{props.imdbID}</p></div>\r\n                <div><p>Type:{props.type}</p></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import style from \"./MoviesList.module.css\";\r\nimport {Movie} from \"./Movie\";\r\nimport {SearchType} from \"../../api/api\";\r\n\r\ntype MoviesListPropsType = {\r\n    movie: Array<SearchType>\r\n    title: string\r\n    totalResults: string\r\n\r\n}\r\n\r\nexport function MoviesList(props: MoviesListPropsType) {\r\n\r\n    return (<div className={style.moviesBlock}>\r\n            {props.movie.map(mv => <Movie\r\n                key={mv.imdbID}\r\n                name={mv.Title}\r\n                year={mv.Year}\r\n                imdbID={mv.imdbID}\r\n                type={mv.Type}\r\n                img={mv.Poster}\r\n            />)\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import style from \"../main/Main.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport React, {useEffect} from \"react\";\r\nimport {fetchMovieTC, setNewCurrentPageAC} from \"../../redux/reducer/movie-reducer\";\r\nimport {MoviesList} from \"../movies/MoviesList\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\n\r\nexport const Main = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {title, totalResults, page, status, Search} = useSelector((state: AppRootStateType) => state.movieReducer)\r\n\r\n    const pagesCount = Math.ceil(+totalResults / 10)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchMovieTC(title, page))\r\n    }, [dispatch, title, page])\r\n\r\n    const onCurrentPageChangeHandler = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        dispatch(setNewCurrentPageAC(value))\r\n    }\r\n\r\n\r\n    if (status === \"loading\") {\r\n        return <div style={{position: \"fixed\", top: \"50%\", left: \"0%\", textAlign: \"center\", width: \"100%\"}}>\r\n            <CircularProgress\r\n                size={70}\r\n            />\r\n        </div>\r\n    }\r\n\r\n    return (<div className={style.mainBlock}>\r\n        <div className={style.search}>\r\n            {Search.length > 0 ? <p>Your search for: {title}, {totalResults} results found</p>\r\n                : <p>Movie list is empty. Please enter movie.</p>\r\n            }\r\n        </div>\r\n        <div className={style.mainContainer}>\r\n            <MoviesList movie={Search} title={title} totalResults={totalResults}/>\r\n        </div>\r\n        {Search.length > 0\r\n            ? <div className={style.pagination}>\r\n                <Pagination page={page} count={pagesCount} onChange={onCurrentPageChangeHandler}/>\r\n            </div>\r\n            : \"\"}\r\n    </div>)\r\n})","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/header/Header\";\nimport {Main} from \"./components/main/Main\";\n\nfunction App() {\n   \n    return (\n        <div className=\"App\">\n            <Header/>\n            <Main/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {movieReducer, MovieReducersActionTypes} from \"./reducer/movie-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    movieReducer: movieReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionsType = MovieReducersActionTypes\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}